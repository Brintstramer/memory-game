{"version":3,"file":"bundle.js","mappings":"qBAuCAA,EAAOC,QAAU,CAAEC,eAvCnB,SAASA,EAAeC,GACpB,GAAIA,UAAmD,IAAVA,EACzC,OAAOC,SAASC,eAAe,IAEnC,GACqB,iBAAVF,GACU,iBAAVA,IACG,IAAVA,EAEA,OAAOC,SAASC,eAAeF,GAEnC,GAAIG,MAAMC,QAAQJ,GAAQ,CACtB,MAAMK,EAAWJ,SAASK,yBAI1B,OAHAN,EAAMO,SAASC,IACXH,EAASI,YAAYV,EAAeS,GAAS,IAE1CH,CACX,CAEA,MAAMK,EAAST,SAASU,cAAcX,EAAMY,KAiB5C,OAfIZ,EAAMa,KACU,GAAGC,OAAOd,EAAMa,KACxBN,SAASM,IACbH,EAAOK,UAAUC,IAAIH,EAAI,IAG7Bb,EAAMiB,OACOC,OAAOC,KAAKnB,EAAMiB,OAC1BV,SAASa,IACVV,EAAOW,aAAaD,EAAKpB,EAAMiB,MAAMG,GAAK,IAIlDV,EAAOD,YAAYV,EAAeC,EAAMsB,UAEjCZ,CACX,E,GCpCIa,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAa5B,QAGrB,IAAID,EAAS0B,EAAyBE,GAAY,CAGjD3B,QAAS,CAAC,GAOX,OAHA8B,EAAoBH,GAAU5B,EAAQA,EAAOC,QAAS0B,GAG/C3B,EAAOC,OACf,C,gCCyGO,SAAS+B,EAAcC,GAC1B,MAAO,CACHlB,IAAK,MACLC,IAAK,cACLI,MAAO,CACHc,MAAO,6CAAsCD,EAAI,SACjD,YAAaA,GAGzB,C,IC1DIE,EACAC,E,kMArDSC,EAAW,CACpBC,MAAO,GACPC,MAAO,EACPC,MAAO,CACH,UACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,UACA,YACA,YACA,YACA,YACA,aACA,YACA,YACA,YACA,YACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,UAEJ,kBAAmB,GACnB,iBAAkB,CACdC,WAAW,EACXC,YAAY,EACZC,eAAgB,GAChBC,gBAAiB,GACjBC,YAAa,IAIfC,EAAU1C,SAAS2C,cAAc,QAGnCC,EAAU,EACVC,EAAU,EAEd,SAASC,IAYT,IACUC,EAZFL,IACAA,EAAQM,YAAc,GAEtBN,EAAQlC,aAAY,IAAAV,gBDtFjB,CACHa,IAAK,MACLC,IAAK,eACLS,QAAS,CACL,CACIV,IAAK,MACLC,IAAK,qBACLS,QAAS,CACL,CACIA,QAAS,UAEb,CACIV,IAAK,MAET,CACIU,QAAS,eAIrB,CACIV,IAAK,MACLC,IAAK,uBACLS,QAAS,CACL,CACIV,IAAK,MACLC,IAAK,8BACLS,QAAS,CACL,CACIV,IAAK,QACLK,MAAO,CACHiC,GAAI,IACJC,KAAM,QACNC,KAAM,QACNC,MAAO,MAGf,CACIzC,IAAK,QACLK,MAAO,CACHqC,IAAK,KAEThC,QAAS,OAIrB,CACIV,IAAK,MACLC,IAAK,8BACLS,QAAS,CACL,CACIV,IAAK,QACLK,MAAO,CACHiC,GAAI,IACJC,KAAM,QACNC,KAAM,QACNC,MAAO,MAGf,CACIzC,IAAK,QACLK,MAAO,CACHqC,IAAK,KAEThC,QAAS,OAIrB,CACIV,IAAK,MACLC,IAAK,8BACLS,QAAS,CACL,CACIV,IAAK,QACLK,MAAO,CACHiC,GAAI,IACJC,KAAM,QACNC,KAAM,QACNC,MAAO,MAGf,CACIzC,IAAK,QACLK,MAAO,CACHqC,IAAK,KAEThC,QAAS,SAM7B,CACIV,IAAK,SACLC,IAAK,0BACLS,QAAS,cCCf0B,EAAWL,EAAQC,cACrB,4BAEWD,EAAQY,iBAAiB,gCAEjChD,SAAQ,SAAC4B,GACZA,EAAMqB,iBAAiB,SAAS,WAC5BtB,EAAIC,MAAQA,EAAMc,WACtB,GACJ,IAEAD,EAASQ,iBAAiB,SAAS,WAC/B,OAAQtB,EAAIC,OACR,IAAK,IACDsB,EAAiB,GACjB,MACJ,IAAK,IACDA,EAAiB,GACjB,MACJ,IAAK,IACDA,EAAiB,GAK7B,GA9BJ,CAiCA,SAASA,EAAiBpB,GACtBM,EAAQM,YAAc,GAEtBN,EAAQlC,aAAY,IAAAV,gBDzBb,CACHa,IAAK,MACLC,IAAK,SACLS,QAAS,CACL,CACIV,IAAK,MACLC,IAAK,eACLS,QAAS,SAEb,CACIV,IAAK,SACLC,IAAK,kBACLS,QAAS,qBCcrBqB,EAAQlC,aAAY,IAAAV,gBDPb,CACHa,IAAK,MACLC,IAAK,WC0CN,SAAwBwB,GAC3BH,EAAI,mBAAqB,GAEzB,IAAK,IAAIwB,EAAI,EAAGA,EAAIrB,EAAOqB,IAAK,CAC5B,IAAMC,EAAcC,KAAKC,MAAsB,GAAhBD,KAAKE,UAEpC5B,EAAI,mBAAmB6B,KAAK7B,EAAIG,MAAMsB,G,CAG1CzB,EAAI,mBAAqB,EAAH,KACfA,EAAI,oBAAkB,GACtBA,EAAI,oBAAkB,GAG7BA,EAAI,mBAAqBA,EAAI,mBAAmB8B,MAC5C,WAAM,OAAAJ,KAAKE,SAAW,EAAhB,GAEd,CApDIG,CAAe5B,GAEf6B,IAEAhC,EAAIE,MAAQ+B,OAAOC,YAAYC,EAAS,MAEpB1B,EAAQC,cAAc,oBAE9BY,iBAAiB,SAAS,WAClCxB,EAAWiB,YAAc,GAEzBiB,IAEArB,EAAU,EACVC,EAAU,EAEVZ,EAAI,kBAAkBQ,YAAc,EACpCR,EAAI,kBAAkBI,WAAY,EAClCJ,EAAI,kBAAkBK,YAAa,CACvC,GACJ,CACA,SAAS8B,KACLxB,GAAW,IAEI,KACXC,GAAW,EACXD,EAAU,GAGd,IAAMyB,EAAezB,EAAU,GAAK,WAAIA,GAAYA,EAC9C0B,EAAezB,EAAU,GAAK,WAAIA,GAAYA,GACpDb,EAAOU,EAAQC,cAAc,kBACxBK,YAAc,UAAGsB,EAAY,YAAID,EAC1C,CAqBA,SAASJ,KACLlC,EAAaW,EAAQC,cAAc,WAExBnC,aACP,IAAAV,gBAAemC,EAAI,mBAAmBsC,IAAI3C,KAGhCG,EAAWuB,iBAA8B,gBAEjDhD,SAAQ,SAACuB,GACXA,EAAKC,MAAM0C,cAAgB,OAE3BC,YAAW,WACP5C,EAAKC,MAAM4C,gBAAkB,oCAE7B7C,EAAKC,MAAM0C,cAAgB,EAC/B,GAAG,KAEH3C,EAAK0B,iBAAiB,SAAS,WACtB1B,EAAKf,UAAU6D,SAAS,aACzB9C,EAAKC,MAAM4C,gBAAkB,4BAAqB7C,EAAK+C,QAAQ/C,KAAI,UACnEA,EAAKC,MAAM0C,cAAgB,OAEtBvC,EAAI,kBAAkBI,WAMvBJ,EAAI,kBAAkBK,WAAaT,EAEnCI,EAAI,kBAAkBO,gBAClBX,EAAKgD,aAAa,aAGlB5C,EAAI,kBAAkBM,iBACtBN,EAAI,kBAAkBO,iBAGyB,iBAApCP,EAAI,kBAAkBI,WAE7BJ,EAAI,kBAAkBI,UAAUvB,UAAUC,IACtC,WAKwC,iBAArCkB,EAAI,kBAAkBK,YAE7BL,EAAI,kBAAkBK,WAAWxB,UAAUC,IACvC,WAIRkB,EAAI,kBAAkBI,WAAY,EAElCJ,EAAI,kBAAkBQ,aAAe,EAGjCR,EAAI,kBAAkBQ,cACtBkB,KAAKC,MAAM3B,EAAI,mBAAmB6C,OAAS,IAE3CC,EACI,4BACA,kBAIR9C,EAAI,kBAAkBI,WAAY,EAClCJ,EAAI,kBAAkBK,YAAa,EAEnCyC,EACI,6BACA,oBAjDR9C,EAAI,kBAAkBI,UAAYR,EAElCI,EAAI,kBAAkBM,eAClBV,EAAKgD,aAAa,cAmDlC,GACJ,GACJ,CAEA,SAASE,EAAgBC,EAAcC,GACnCvC,EAAQlC,aAAY,IAAAV,gBDhIb,CACHa,IAAK,MACLC,IAAK,yBACLS,QAAS,MC8HbqB,EAAQlC,aAAY,IAAAV,gBD1HjB,SAA2BkF,EAAcC,GAC5C,MAAO,CACHtE,IAAK,MACLC,IAAK,eACLS,QAAS,CACL,CACIV,IAAK,MACLC,IAAK,qBACLI,MAAO,CACHkE,IAAKF,IAGb,CACIrE,IAAK,MACLC,IAAK,qBACLS,QAAS4D,GAEb,CACItE,IAAK,MACLC,IAAK,qBACLS,QAAS,CACL,CACIV,IAAK,IACLC,IAAK,2BACLS,QAAS,qBAEb,CACIV,IAAK,MACLC,IAAK,4BACLS,QAAS,WAIrB,CACIV,IAAK,SACLC,IAAK,0BACLS,QAAS,iBAIzB,CCkFuC8D,CAAkBH,EAAMC,KAE3D,IAAMG,EAAW1C,EAAQC,cACrB,8BAGAX,IACAoD,EAASpC,YAAchB,EAAKgB,aAGhCqC,cAAcnB,OAAOjC,EAAIE,QACzBS,EAAU,EACVC,EAAU,EAEOH,EAAQC,cACrB,4BAGKY,iBAAiB,SAAS,WAC/BtB,EAAI,kBAAkBQ,YAAc,EAEpCK,GACJ,GACJ,CAtMAA,G","sources":["webpack://memory-game/./src/lib/template-engine.js","webpack://memory-game/webpack/bootstrap","webpack://memory-game/./src/ts/templateScreens.ts","webpack://memory-game/./src/ts/script.ts"],"sourcesContent":["function templateEngine(block) {\n    if (block === undefined || block === null || block === false) {\n        return document.createTextNode('');\n    }\n    if (\n        typeof block === 'string' ||\n        typeof block === 'number' ||\n        block === true\n    ) {\n        return document.createTextNode(block);\n    }\n    if (Array.isArray(block)) {\n        const fragment = document.createDocumentFragment();\n        block.forEach((element) => {\n            fragment.appendChild(templateEngine(element));\n        });\n        return fragment;\n    }\n\n    const result = document.createElement(block.tag);\n\n    if (block.cls) {\n        const classes = [].concat(block.cls);\n        classes.forEach((cls) => {\n            result.classList.add(cls);\n        });\n    }\n    if (block.attrs) {\n        const keys = Object.keys(block.attrs);\n        keys.forEach((key) => {\n            result.setAttribute(key, block.attrs[key]);\n        });\n    }\n\n    result.appendChild(templateEngine(block.content));\n\n    return result;\n}\n\nmodule.exports = { templateEngine };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export function templateLevelBlock() {\n    return {\n        tag: 'div',\n        cls: 'notification',\n        content: [\n            {\n                tag: 'div',\n                cls: 'notification__text',\n                content: [\n                    {\n                        content: 'Выбери',\n                    },\n                    {\n                        tag: 'br',\n                    },\n                    {\n                        content: 'сложность',\n                    },\n                ],\n            },\n            {\n                tag: 'div',\n                cls: 'notification__levels',\n                content: [\n                    {\n                        tag: 'div',\n                        cls: 'notification__levels__level',\n                        content: [\n                            {\n                                tag: 'input',\n                                attrs: {\n                                    id: '1',\n                                    type: 'radio',\n                                    name: 'level',\n                                    value: '1',\n                                },\n                            },\n                            {\n                                tag: 'label',\n                                attrs: {\n                                    for: '1',\n                                },\n                                content: '1',\n                            },\n                        ],\n                    },\n                    {\n                        tag: 'div',\n                        cls: 'notification__levels__level',\n                        content: [\n                            {\n                                tag: 'input',\n                                attrs: {\n                                    id: '2',\n                                    type: 'radio',\n                                    name: 'level',\n                                    value: '2',\n                                },\n                            },\n                            {\n                                tag: 'label',\n                                attrs: {\n                                    for: '2',\n                                },\n                                content: '2',\n                            },\n                        ],\n                    },\n                    {\n                        tag: 'div',\n                        cls: 'notification__levels__level',\n                        content: [\n                            {\n                                tag: 'input',\n                                attrs: {\n                                    id: '3',\n                                    type: 'radio',\n                                    name: 'level',\n                                    value: '3',\n                                },\n                            },\n                            {\n                                tag: 'label',\n                                attrs: {\n                                    for: '3',\n                                },\n                                content: '3',\n                            },\n                        ],\n                    },\n                ],\n            },\n            {\n                tag: 'button',\n                cls: 'notification__btn-start',\n                content: 'Старт',\n            },\n        ],\n    };\n}\n\nexport function templateHeader() {\n    return {\n        tag: 'div',\n        cls: 'header',\n        content: [\n            {\n                tag: 'div',\n                cls: 'header__time',\n                content: '00.00',\n            },\n            {\n                tag: 'button',\n                cls: 'header__restart',\n                content: 'Начать заново',\n            },\n        ],\n    };\n}\n\nexport function templateCardsField() {\n    return {\n        tag: 'div',\n        cls: 'cards',\n    };\n}\n\nexport function templateCards(card: string) {\n    return {\n        tag: 'div',\n        cls: 'cards__card',\n        attrs: {\n            style: `background-image: url(./static/img/${card}.svg)`,\n            'data-card': card,\n        },\n    };\n}\n\nexport function templateTransparentBackground() {\n    return {\n        tag: 'div',\n        cls: 'transparent-background',\n        content: [],\n    };\n}\n\nexport function templateGameFinal(icon: string, winLose: string) {\n    return {\n        tag: 'div',\n        cls: 'notification',\n        content: [\n            {\n                tag: 'img',\n                cls: 'notification__icon',\n                attrs: {\n                    src: icon,\n                },\n            },\n            {\n                tag: 'div',\n                cls: 'notification__text',\n                content: winLose,\n            },\n            {\n                tag: 'div',\n                cls: 'notification__time',\n                content: [\n                    {\n                        tag: 'p',\n                        cls: 'notification__time__text',\n                        content: 'Затраченное время',\n                    },\n                    {\n                        tag: 'div',\n                        cls: 'notification__time__value',\n                        content: '00.00',\n                    },\n                ],\n            },\n            {\n                tag: 'button',\n                cls: 'notification__btn-start',\n                content: 'Играть снова',\n            },\n        ],\n    };\n}\n","import { templateEngine } from '../lib/template-engine';\nimport {\n    templateLevelBlock,\n    templateHeader,\n    templateCardsField,\n    templateCards,\n    templateTransparentBackground,\n    templateGameFinal,\n} from './templateScreens';\n\ntype SelectedCards = {\n    firstCard: Element | boolean;\n    secondCard: Element | boolean;\n    firstCardValue: string | null;\n    secondCardValue: string | null;\n    openedCards: number;\n};\n\ntype App = {\n    level: string | null;\n    timer: number;\n    cards: string[];\n    'generated-cards': string[];\n    'selected-cards': SelectedCards;\n};\n\nexport const app: App = {\n    level: '',\n    timer: 0,\n    cards: [\n        'spadesA',\n        'spadesK',\n        'spadesQ',\n        'spadesJ',\n        'spades10',\n        'spades9',\n        'spades8',\n        'spades7',\n        'spades6',\n        'heartsA',\n        'heartsK',\n        'heartsQ',\n        'heartsJ',\n        'hearts10',\n        'hearts9',\n        'hearts8',\n        'hearts7',\n        'hearts6',\n        'diamondsA',\n        'diamondsK',\n        'diamondsQ',\n        'diamondsJ',\n        'diamonds10',\n        'diamonds9',\n        'diamonds8',\n        'diamonds7',\n        'diamonds6',\n        'clubsA',\n        'clubsK',\n        'clubsQ',\n        'clubsJ',\n        'clubs10',\n        'clubs9',\n        'clubs8',\n        'clubs7',\n        'clubs6',\n    ],\n    'generated-cards': [],\n    'selected-cards': {\n        firstCard: false,\n        secondCard: false,\n        firstCardValue: '',\n        secondCardValue: '',\n        openedCards: 0,\n    },\n};\n\nconst appPage = document.querySelector('.app') as Element;\nlet cardsField: Element;\nlet time: Element;\nlet seconds = 0,\n    minutes = 0;\n\nfunction renderLevelBlock() {\n    if (appPage) {\n        appPage.textContent = '';\n\n        appPage.appendChild(templateEngine(templateLevelBlock()));\n    }\n\n    startGame();\n}\n\nrenderLevelBlock();\n\nfunction startGame() {\n    const btnStart = appPage.querySelector(\n        '.notification__btn-start'\n    ) as Element;\n    const levels = appPage.querySelectorAll('.notification__levels__level');\n\n    levels.forEach((level) => {\n        level.addEventListener('click', () => {\n            app.level = level.textContent;\n        });\n    });\n\n    btnStart.addEventListener('click', () => {\n        switch (app.level) {\n            case '1':\n                renderGameScreen(3);\n                break;\n            case '2':\n                renderGameScreen(6);\n                break;\n            case '3':\n                renderGameScreen(9);\n                break;\n            default:\n                break;\n        }\n    });\n}\n\nfunction renderGameScreen(cards: number) {\n    appPage.textContent = '';\n\n    appPage.appendChild(templateEngine(templateHeader()));\n    appPage.appendChild(templateEngine(templateCardsField()));\n\n    genRandomCards(cards);\n\n    renderCardsField();\n\n    app.timer = Number(setInterval(genTime, 1000));\n\n    const restartGame = appPage.querySelector('.header__restart') as Element;\n\n    restartGame.addEventListener('click', () => {\n        cardsField.textContent = '';\n\n        renderCardsField();\n\n        seconds = 0;\n        minutes = 0;\n\n        app['selected-cards'].openedCards = 0;\n        app['selected-cards'].firstCard = false;\n        app['selected-cards'].secondCard = false;\n    });\n}\nfunction genTime() {\n    seconds += 1;\n\n    if (seconds >= 60) {\n        minutes += 1;\n        seconds = 0;\n    }\n\n    const secondsValue = seconds < 10 ? `0${seconds}` : seconds;\n    const minutesValue = minutes < 10 ? `0${minutes}` : minutes;\n    time = appPage.querySelector('.header__time') as Element;\n    time.textContent = `${minutesValue}.${secondsValue}`;\n}\n\nexport function genRandomCards(cards: number) {\n    app['generated-cards'] = [];\n\n    for (let i = 0; i < cards; i++) {\n        const randomIndex = Math.floor(Math.random() * 36);\n\n        app['generated-cards'].push(app.cards[randomIndex]);\n    }\n\n    app['generated-cards'] = [\n        ...app['generated-cards'],\n        ...app['generated-cards'],\n    ];\n\n    app['generated-cards'] = app['generated-cards'].sort(\n        () => Math.random() - 0.5\n    );\n}\n\nfunction renderCardsField() {\n    cardsField = appPage.querySelector('.cards') as Element;\n\n    cardsField.appendChild(\n        templateEngine(app['generated-cards'].map(templateCards))\n    );\n\n    const cards = cardsField.querySelectorAll<HTMLElement>('.cards__card');\n\n    cards.forEach((card) => {\n        card.style.pointerEvents = 'none';\n\n        setTimeout(() => {\n            card.style.backgroundImage = \"url('./static/img/card-back.svg')\";\n\n            card.style.pointerEvents = '';\n        }, 5000);\n\n        card.addEventListener('click', () => {\n            if (!card.classList.contains('matched')) {\n                card.style.backgroundImage = `url('./static/img/${card.dataset.card}.svg')`;\n                card.style.pointerEvents = 'none';\n\n                if (!app['selected-cards'].firstCard) {\n                    app['selected-cards'].firstCard = card;\n\n                    app['selected-cards'].firstCardValue =\n                        card.getAttribute('data-card');\n                } else {\n                    app['selected-cards'].secondCard = card;\n\n                    app['selected-cards'].secondCardValue =\n                        card.getAttribute('data-card');\n\n                    if (\n                        app['selected-cards'].firstCardValue ===\n                        app['selected-cards'].secondCardValue\n                    ) {\n                        if (\n                            typeof app['selected-cards'].firstCard === 'object'\n                        ) {\n                            app['selected-cards'].firstCard.classList.add(\n                                'matched'\n                            );\n                        }\n\n                        if (\n                            typeof app['selected-cards'].secondCard === 'object'\n                        ) {\n                            app['selected-cards'].secondCard.classList.add(\n                                'matched'\n                            );\n                        }\n\n                        app['selected-cards'].firstCard = false;\n\n                        app['selected-cards'].openedCards += 1;\n\n                        if (\n                            app['selected-cards'].openedCards ===\n                            Math.floor(app['generated-cards'].length / 2)\n                        ) {\n                            renderGameFinal(\n                                './static/img/icon-win.png',\n                                'Вы выиграли!'\n                            );\n                        }\n                    } else {\n                        app['selected-cards'].firstCard = false;\n                        app['selected-cards'].secondCard = false;\n\n                        renderGameFinal(\n                            './static/img/icon-lose.png',\n                            'Вы проиграли!'\n                        );\n                    }\n                }\n            }\n        });\n    });\n}\n\nfunction renderGameFinal(icon: string, winLose: string) {\n    appPage.appendChild(templateEngine(templateTransparentBackground()));\n    appPage.appendChild(templateEngine(templateGameFinal(icon, winLose)));\n\n    const gameTime = appPage.querySelector(\n        '.notification__time__value'\n    ) as Element;\n\n    if (time) {\n        gameTime.textContent = time.textContent;\n    }\n\n    clearInterval(Number(app.timer));\n    seconds = 0;\n    minutes = 0;\n\n    const btnStart = appPage.querySelector(\n        '.notification__btn-start'\n    ) as Element;\n\n    btnStart.addEventListener('click', () => {\n        app['selected-cards'].openedCards = 0;\n\n        renderLevelBlock();\n    });\n}\n"],"names":["module","exports","templateEngine","block","document","createTextNode","Array","isArray","fragment","createDocumentFragment","forEach","element","appendChild","result","createElement","tag","cls","concat","classList","add","attrs","Object","keys","key","setAttribute","content","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","templateCards","card","style","cardsField","time","app","level","timer","cards","firstCard","secondCard","firstCardValue","secondCardValue","openedCards","appPage","querySelector","seconds","minutes","renderLevelBlock","btnStart","textContent","id","type","name","value","for","querySelectorAll","addEventListener","renderGameScreen","i","randomIndex","Math","floor","random","push","sort","genRandomCards","renderCardsField","Number","setInterval","genTime","secondsValue","minutesValue","map","pointerEvents","setTimeout","backgroundImage","contains","dataset","getAttribute","length","renderGameFinal","icon","winLose","src","templateGameFinal","gameTime","clearInterval"],"sourceRoot":""}