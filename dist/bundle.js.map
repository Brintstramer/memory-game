{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://memory-game/./src/lib/template-engine.ts","webpack://memory-game/./src/js/templateScreens.ts","webpack://memory-game/./src/js/script.ts"],"sourcesContent":["export function templateEngine(block) {\n    if (block === undefined || block === null || block === false) {\n        return document.createTextNode('');\n    }\n    if (typeof block === 'string' ||\n        typeof block === 'number' ||\n        block === true) {\n        return document.createTextNode(block);\n    }\n    if (Array.isArray(block)) {\n        var fragment_1 = document.createDocumentFragment();\n        block.forEach(function (element) {\n            fragment_1.appendChild(templateEngine(element));\n        });\n        return fragment_1;\n    }\n    var result = document.createElement(block.tag);\n    if (block.cls) {\n        var classes = [].concat(block.cls);\n        classes.forEach(function (cls) {\n            result.classList.add(cls);\n        });\n    }\n    if (block.attrs) {\n        var keys = Object.keys(block.attrs);\n        keys.forEach(function (key) {\n            result.setAttribute(key, block.attrs[key]);\n        });\n    }\n    result.appendChild(templateEngine(block.content));\n    return result;\n}\n// templateEngine();\n","export function templateLevelBlock() {\n    return {\n        tag: 'div',\n        cls: 'notification',\n        content: [\n            {\n                tag: 'div',\n                cls: 'notification__text',\n                content: [\n                    {\n                        content: 'Выбери',\n                    },\n                    {\n                        tag: 'br',\n                    },\n                    {\n                        content: 'сложность',\n                    },\n                ],\n            },\n            {\n                tag: 'div',\n                cls: 'notification__levels',\n                content: [\n                    {\n                        tag: 'div',\n                        cls: 'notification__levels__level',\n                        content: [\n                            {\n                                tag: 'input',\n                                attrs: {\n                                    id: '1',\n                                    type: 'radio',\n                                    name: 'level',\n                                    value: '1',\n                                },\n                            },\n                            {\n                                tag: 'label',\n                                attrs: {\n                                    for: '1',\n                                },\n                                content: '1',\n                            },\n                        ],\n                    },\n                    {\n                        tag: 'div',\n                        cls: 'notification__levels__level',\n                        content: [\n                            {\n                                tag: 'input',\n                                attrs: {\n                                    id: '2',\n                                    type: 'radio',\n                                    name: 'level',\n                                    value: '2',\n                                },\n                            },\n                            {\n                                tag: 'label',\n                                attrs: {\n                                    for: '2',\n                                },\n                                content: '2',\n                            },\n                        ],\n                    },\n                    {\n                        tag: 'div',\n                        cls: 'notification__levels__level',\n                        content: [\n                            {\n                                tag: 'input',\n                                attrs: {\n                                    id: '3',\n                                    type: 'radio',\n                                    name: 'level',\n                                    value: '3',\n                                },\n                            },\n                            {\n                                tag: 'label',\n                                attrs: {\n                                    for: '3',\n                                },\n                                content: '3',\n                            },\n                        ],\n                    },\n                ],\n            },\n            {\n                tag: 'button',\n                cls: 'notification__btn-start',\n                content: 'Старт',\n            },\n        ],\n    };\n}\nexport function templateHeader() {\n    return {\n        tag: 'div',\n        cls: 'header',\n        content: [\n            {\n                tag: 'div',\n                cls: 'header__time',\n                content: '00.00',\n            },\n            {\n                tag: 'button',\n                cls: 'header__restart',\n                content: 'Начать заново',\n            },\n        ],\n    };\n}\nexport function templateCardsField() {\n    return {\n        tag: 'div',\n        cls: 'cards',\n    };\n}\nexport function templateCards(card) {\n    return {\n        tag: 'div',\n        cls: 'cards__card',\n        attrs: {\n            style: \"background-image: url(./static/img/\".concat(card, \".svg)\"),\n            'data-card': card,\n        },\n    };\n}\nexport function templateTransparentBackground() {\n    return {\n        tag: 'div',\n        cls: 'transparent-background',\n        content: [],\n    };\n}\nexport function templateGameFinal(icon, winLose) {\n    return {\n        tag: 'div',\n        cls: 'notification',\n        content: [\n            {\n                tag: 'img',\n                cls: 'notification__icon',\n                attrs: {\n                    src: icon,\n                },\n            },\n            {\n                tag: 'div',\n                cls: 'notification__text',\n                content: winLose,\n            },\n            {\n                tag: 'div',\n                cls: 'notification__time',\n                content: [\n                    {\n                        tag: 'p',\n                        cls: 'notification__time__text',\n                        content: 'Затраченное время',\n                    },\n                    {\n                        tag: 'div',\n                        cls: 'notification__time__value',\n                        content: '00.00',\n                    },\n                ],\n            },\n            {\n                tag: 'button',\n                cls: 'notification__btn-start',\n                content: 'Играть снова',\n            },\n        ],\n    };\n}\n","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n// import { javascript } from 'webpack';\n// import { HtmlTagObject } from 'html-webpack-plugin';\n// import { javascript } from 'webpack';\nimport { templateEngine } from '../lib/template-engine';\nimport { templateLevelBlock, templateHeader, templateCardsField, templateCards, templateTransparentBackground, templateGameFinal, } from './templateScreens';\nvar app = {\n    level: '',\n    timer: {},\n    cards: [\n        'spadesA',\n        'spadesK',\n        'spadesQ',\n        'spadesJ',\n        'spades10',\n        'spades9',\n        'spades8',\n        'spades7',\n        'spades6',\n        'heartsA',\n        'heartsK',\n        'heartsQ',\n        'heartsJ',\n        'hearts10',\n        'hearts9',\n        'hearts8',\n        'hearts7',\n        'hearts6',\n        'diamondsA',\n        'diamondsK',\n        'diamondsQ',\n        'diamondsJ',\n        'diamonds10',\n        'diamonds9',\n        'diamonds8',\n        'diamonds7',\n        'diamonds6',\n        'clubsA',\n        'clubsK',\n        'clubsQ',\n        'clubsJ',\n        'clubs10',\n        'clubs9',\n        'clubs8',\n        'clubs7',\n        'clubs6',\n    ],\n    'generated-cards': [],\n    'selected-cards': {\n        firstCard: false,\n        secondCard: false,\n        firstCardValue: '',\n        secondCardValue: '',\n        openedCards: 0,\n    },\n};\nvar appPage = document.querySelector('.app');\nvar cardsField;\nvar time;\nvar seconds = 0, minutes = 0;\nfunction renderLevelBlock() {\n    if (appPage) {\n        appPage.textContent = '';\n        appPage.appendChild(templateEngine(templateLevelBlock()));\n    }\n    startGame();\n}\nrenderLevelBlock();\nfunction startGame() {\n    var btnStart = appPage.querySelector('.notification__btn-start');\n    var levels = appPage === null || appPage === void 0 ? void 0 : appPage.querySelectorAll('.notification__levels__level');\n    levels === null || levels === void 0 ? void 0 : levels.forEach(function (level) {\n        level.addEventListener('click', function () {\n            app.level = level.textContent;\n        });\n    });\n    btnStart.addEventListener('click', function () {\n        switch (app.level) {\n            case '1':\n                renderGameScreen(3);\n                break;\n            case '2':\n                renderGameScreen(6);\n                break;\n            case '3':\n                renderGameScreen(9);\n                break;\n            default:\n                break;\n        }\n    });\n}\nfunction renderGameScreen(cards) {\n    appPage.textContent = '';\n    appPage.appendChild(templateEngine(templateHeader()));\n    appPage.appendChild(templateEngine(templateCardsField()));\n    genRandomCards(cards);\n    renderCardsField();\n    app.timer.interval = setInterval(genTime, 1000);\n    var restartGame = appPage.querySelector('.header__restart');\n    restartGame.addEventListener('click', function () {\n        cardsField.textContent = '';\n        renderCardsField();\n        seconds = 0;\n        minutes = 0;\n        app['selected-cards'].openedCards = 0;\n        app['selected-cards'].firstCard = false;\n        app['selected-cards'].secondCard = false;\n    });\n}\nfunction genTime() {\n    seconds += 1;\n    if (seconds >= 60) {\n        minutes += 1;\n        seconds = 0;\n    }\n    var secondsValue = seconds < 10 ? \"0\".concat(seconds) : seconds;\n    var minutesValue = minutes < 10 ? \"0\".concat(minutes) : minutes;\n    time = appPage.querySelector('.header__time');\n    time.textContent = \"\".concat(minutesValue, \".\").concat(secondsValue);\n}\nfunction genRandomCards(cards) {\n    app['generated-cards'] = [];\n    for (var i = 0; i < cards; i++) {\n        var randomIndex = Math.floor(Math.random() * 36);\n        app['generated-cards'].push(app.cards[randomIndex]);\n    }\n    app['generated-cards'] = __spreadArray(__spreadArray([], app['generated-cards'], true), app['generated-cards'], true);\n    app['generated-cards'] = app['generated-cards'].sort(function () { return Math.random() - 0.5; });\n}\nfunction renderCardsField() {\n    cardsField = appPage.querySelector('.cards');\n    cardsField.appendChild(templateEngine(app['generated-cards'].map(templateCards)));\n    var cards = cardsField.querySelectorAll('.cards__card');\n    cards.forEach(function (card) {\n        card.style.pointerEvents = 'none';\n        setTimeout(function () {\n            card.style.backgroundImage = \"url('./static/img/card-back.svg')\";\n            card.style.pointerEvents = '';\n        }, 5000);\n        card.addEventListener('click', function () {\n            if (!card.classList.contains('matched')) {\n                card.style.backgroundImage = \"url('./static/img/\".concat(card.dataset.card, \".svg')\");\n                card.style.pointerEvents = 'none';\n                if (!app['selected-cards'].firstCard) {\n                    app['selected-cards'].firstCard = card;\n                    app['selected-cards'].firstCardValue =\n                        card.getAttribute('data-card');\n                }\n                else {\n                    app['selected-cards'].secondCard = card;\n                    app['selected-cards'].secondCardValue =\n                        card.getAttribute('data-card');\n                    if (app['selected-cards'].firstCardValue ===\n                        app['selected-cards'].secondCardValue) {\n                        if (typeof app['selected-cards'].firstCard === 'object') {\n                            app['selected-cards'].firstCard.classList.add('matched');\n                        }\n                        if (typeof app['selected-cards'].secondCard === 'object') {\n                            app['selected-cards'].secondCard.classList.add('matched');\n                        }\n                        app['selected-cards'].firstCard = false;\n                        app['selected-cards'].openedCards += 1;\n                        if (app['selected-cards'].openedCards ===\n                            Math.floor(app['generated-cards'].length / 2)) {\n                            renderGameFinal('./static/img/icon-win.svg', 'Вы выиграли!');\n                        }\n                    }\n                    else {\n                        app['selected-cards'].firstCard = false;\n                        app['selected-cards'].secondCard = false;\n                        renderGameFinal('./static/img/icon-lose.svg', 'Вы проиграли!');\n                    }\n                }\n            }\n        });\n    });\n}\nfunction renderGameFinal(icon, winLose) {\n    appPage === null || appPage === void 0 ? void 0 : appPage.appendChild(templateEngine(templateTransparentBackground()));\n    appPage === null || appPage === void 0 ? void 0 : appPage.appendChild(templateEngine(templateGameFinal(icon, winLose)));\n    var gameTime = appPage.querySelector('.notification__time__value');\n    if (time) {\n        gameTime.textContent = time.textContent;\n    }\n    clearInterval(app.timer.interval);\n    seconds = 0;\n    minutes = 0;\n    var btnStart = appPage.querySelector('.notification__btn-start');\n    btnStart.addEventListener('click', function () {\n        app['selected-cards'].openedCards = 0;\n        renderLevelBlock();\n    });\n}\n"],"names":["templateEngine","block","document","createTextNode","Array","isArray","fragment_1","createDocumentFragment","forEach","element","appendChild","result","createElement","tag","cls","concat","classList","add","attrs","Object","keys","key","setAttribute","content","templateCards","card","style","cardsField","time","__spreadArray","to","from","pack","arguments","length","ar","i","l","prototype","slice","call","app","level","timer","cards","firstCard","secondCard","firstCardValue","secondCardValue","openedCards","appPage","querySelector","seconds","minutes","renderLevelBlock","btnStart","levels","textContent","id","type","name","value","for","querySelectorAll","addEventListener","renderGameScreen","randomIndex","Math","floor","random","push","sort","genRandomCards","renderCardsField","interval","setInterval","genTime","secondsValue","minutesValue","map","pointerEvents","setTimeout","backgroundImage","contains","dataset","getAttribute","renderGameFinal","icon","winLose","src","templateGameFinal","gameTime","clearInterval"],"sourceRoot":""}